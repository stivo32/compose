services:
  nginx:
    image: custom-nginx:0.1
    ports:
      - 8080:80
    volumes:
      - ./static-site:/usr/share/nginx/html
    depends_on:
      - task-manager
    networks:
      - task-manager-public-network
  redis:
    image: redis
    ports:
      - 6379:6379
    labels:
      - compose.task_manager=task-manager
    volumes:
      - ./.docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    entrypoint: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - redis-network
  task-manager:
    build:
      context: .
      dockerfile: .docker/task_manager/Dockerfile
    image: task-manager:0.1
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOCATION_SERVICE=location-service:8001
    ports:
      - 8000:8000
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 5s
    volumes:
      - ./task_manager:/app/task_manager
    depends_on:
      - redis
    networks:
      - task-manager-public-network
      - redis-network
      - location-network
  location-service:
    build:
      context: .
      dockerfile: .docker/location_service/Dockerfile
    image: location-service:0.1
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 8001:8001
    expose:
      - 8001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/ping" ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 5s
    volumes:
      - ./location_service:/app/location_service
    depends_on:
      - redis
    networks:
      - redis-network
      - location-network
  event-service:
    build:
      context: .
      dockerfile: ./.docker/event_service/Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - redis-network
  redis-populate:
    image: redis
    entrypoint: ["/redis-populate.sh","/redis-populate.txt"]
    depends_on:
      - redis
    env_file:
      - ./.docker/redis/env.redis-populate
    volumes:
      - ./.docker/redis/redis-populate.txt:/redis-populate.txt
      - ./.docker/redis/redis-populate.sh:/redis-populate.sh
    networks:
      - redis-network
#  redis-backup:
#    image: bash
#    entrypoint: ["/snapshot-backup.sh"]
#    depends_on:
#      - redis
#    environment:
#      - BACKUP_PERIOD=60
#    volumes:
#      - ./.docker/redis/snapshot-backup.sh:/snapshot-backup.sh
#      - redis-data:/data:ro
#      - backup:/backup
#    labels:
#      - compose-app=task-manager
#    networks:
#      - redis-network
volumes:
  redis-data:
    labels:
      - compose-app=task-manager
  backup:
    labels:
      - compose-app=task-manager
networks:
  task-manager-public-network:
  redis-network:
  location-network: